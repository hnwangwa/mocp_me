

@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin spacerTop{
	height:15vh;
	width:100vw;
	position:fixed;
	background-color: $reallyLightGray; 
	z-index: 10;
	top:0;
	left:0;
}
@mixin spacerBottom{
	height:15vh;
	width:100vw;
	position:fixed;
	z-index: 100;
	// top:85vh;
	bottom:0;
	left:0;
	background-color: $reallyLightGray;
}

@mixin frame{
	height:100vh;
	top:15vh;
	width:81vw;
	height:70vh;
	border:solid $darkGray; 
	border-width:1.75vw;
	background:none;
	z-index: 100000;
	position:fixed;
	margin-left:9.5vw;
	border-bottom: hidden;
}

@mixin containerDiv{
	transition:all .6s linear;
	border-left:solid $darkGray; 
	border-right:solid $darkGray; 
	border-width:1.75vw;
	margin-left:10.5vw;
	height:80vh;
	width:79.25vw;
}

@mixin revealImage{
	position: relative;
	height:100%;
	width: 100%;
}

@mixin fixedBgWrap{
	clip: rect(0, auto, auto, 0);
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

@mixin fixedBg{
	position: fixed;
	display: block;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	transform: translateZ(0);
}

@mixin imageDiv{
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	width: 100%;
	margin: auto;
	overflow-x: hidden;
}

@mixin imageText{
	// background-color: rgba(51,51,51, .2);
	padding-top:20vh !important;
	padding-left:15vw !important;
	padding-right:15vw !important;
	padding-bottom:20vh !important;
	width:100vw;
	height:100vh;
	text-align: left;
	z-index: 10000000 !important;
	display: block !important;
	color:white;
	position:absolute;
	// opacity:1;
}

// @mixin imagegrid($qty, $margin) {
//   width: ((100% - (($qty - 1) * $margin))/$qty);
//   &:nth-child(n) {
//     margin-right: $margin;
//     margin-bottom: $margin;
//   }
//   &:nth-child(#{$qty}n) {
//     margin-right: 0;
//     margin-bottom: 0;
//   }
// }

// @mixin break($args...) {
//   @if length($args) == 1 {
//     @media (min-width: nth($args, 1)) {
//       @content;
//     }
//   } @else {
//     @media (min-width: nth($args, 1))
//       and (max-width: nth($args, 2)) {
//       @content;
//     }
//   }

// }
